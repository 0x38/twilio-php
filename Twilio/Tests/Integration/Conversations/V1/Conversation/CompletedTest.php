<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Tests\Integration\Conversations\V1\Conversation;

use Twilio\Exceptions\DeserializeException;
use Twilio\Exceptions\TwilioException;
use Twilio\Http\Response;
use Twilio\Tests\HolodeckTestCase;
use Twilio\Tests\Request;

class CompletedTest extends HolodeckTestCase {
    public function testReadRequest() {
        $this->holodeck->mock(new Response(500, ''));
        
        try {
            $this->twilio->conversations->v1->conversations
                                            ->completed->read();
        } catch (DeserializeException $e) {}
          catch (TwilioException $e) {}
        
        $this->assertTrue($this->holodeck->hasRequest(new Request(
            'get',
            'https://conversations.twilio.com/v1/Conversations/Completed'
        )));
    }

    public function testReadFullResponse() {
        $this->holodeck->mock(new Response(
            200,
            '
            {
                "conversations": [
                    {
                        "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "date_created": "2015-05-12T21:08:50Z",
                        "duration": 60,
                        "end_time": "2015-05-12T21:09:50Z",
                        "links": {
                            "participants": "https://conversations.twilio.com/v1/Conversations/CVaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Participants"
                        },
                        "sid": "CVaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "start_time": "2015-05-12T21:08:50Z",
                        "status": "completed",
                        "url": "https://conversations.twilio.com/v1/Conversations/CVaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
                    }
                ],
                "meta": {
                    "first_page_url": "https://conversations.twilio.com/v1/Conversations/Completed?PageSize=50&Page=0",
                    "key": "conversations",
                    "next_page_url": null,
                    "page": 0,
                    "page_size": 50,
                    "previous_page_url": null,
                    "url": "https://conversations.twilio.com/v1/Conversations/Completed?PageSize=50&Page=0"
                }
            }
            '
        ));
        
        $actual = $this->twilio->conversations->v1->conversations
                                                  ->completed->read();
        
        $this->assertNotNull($actual);
    }

    public function testReadEmptyResponse() {
        $this->holodeck->mock(new Response(
            200,
            '
            {
                "conversations": [],
                "meta": {
                    "first_page_url": "https://conversations.twilio.com/v1/Conversations/Completed?PageSize=50&Page=0",
                    "key": "conversations",
                    "next_page_url": null,
                    "page": 0,
                    "page_size": 50,
                    "previous_page_url": null,
                    "url": "https://conversations.twilio.com/v1/Conversations/Completed?PageSize=50&Page=0"
                }
            }
            '
        ));
        
        $actual = $this->twilio->conversations->v1->conversations
                                                  ->completed->read();
        
        $this->assertNotNull($actual);
    }
}
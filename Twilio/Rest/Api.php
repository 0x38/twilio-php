<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest;

use Twilio\Domain;
use Twilio\Exceptions\TwilioException;
use Twilio\Rest\Api\V2010;
use Twilio\Rest\Client;

/**
 * @property V2010 v2010
 */
class Api extends Domain {
    protected $_v2010 = null;

    /**
     * Construct the Api Domain
     * 
     * @param Client $client Twilio\Rest\Client to communicate with Twilio
     * @return Api Domain for Api
     */
    public function __construct(Client $client) {
        parent::__construct($client);
        
        $this->baseUrl = 'https://api.twilio.com';
    }

    /**
     * @return V2010 Version v2010 of api
     */
    public function getV2010() {
        if (!$this->_v2010) {
            $this->_v2010 = new V2010($this);
        }
        return $this->_v2010;
    }

    /**
     * Magic getter to lazy load version
     * 
     * @param string $name Version to return
     * @return Version The requested version
     * @throws TwilioException For unknown versions
     */
    public function __get($name) {
        if (property_exists($this, '_' . $name)) {
            $method = 'get' . ucfirst($name);
            return $this->$method();
        }
        
        throw new TwilioException('Unknown version ' . $name);
    }

    /**
     * @return Account Account provided as the authenticating account
     */
    public function account() {
        return $this->v2010->account;
    }

    /**
     * @return AccountList 
     */
    public function accounts() {
        return $this->v2010->accounts();
    }

    /**
     * @return AddressList 
     */
    public function addresses() {
        return $this->account->addresses;
    }

    /**
     * @return ApplicationList 
     */
    public function applications() {
        return $this->account->applications;
    }

    /**
     * @return AuthorizedConnectAppList 
     */
    public function authorizedConnectApps() {
        return $this->account->authorizedConnectApps;
    }

    /**
     * @return AvailablePhoneNumberCountryList 
     */
    public function availablePhoneNumbers() {
        return $this->account->availablePhoneNumbers;
    }

    /**
     * @return CallList 
     */
    public function calls() {
        return $this->account->calls;
    }

    /**
     * @return ConferenceList 
     */
    public function conferences() {
        return $this->account->conferences;
    }

    /**
     * @return ConnectAppList 
     */
    public function connectApps() {
        return $this->account->connectApps;
    }

    /**
     * @return IncomingPhoneNumberList 
     */
    public function incomingPhoneNumbers() {
        return $this->account->incomingPhoneNumbers;
    }

    /**
     * @return MessageList 
     */
    public function messages() {
        return $this->account->messages;
    }

    /**
     * @return NotificationList 
     */
    public function notifications() {
        return $this->account->notifications;
    }

    /**
     * @return OutgoingCallerIdList 
     */
    public function outgoingCallerIds() {
        return $this->account->outgoingCallerIds;
    }

    /**
     * @return QueueList 
     */
    public function queues() {
        return $this->account->queues;
    }

    /**
     * @return RecordingList 
     */
    public function recordings() {
        return $this->account->recordings;
    }

    /**
     * @return SandboxList 
     */
    public function sandbox() {
        return $this->account->sandbox;
    }

    /**
     * @return SipList 
     */
    public function sip() {
        return $this->account->sip;
    }

    /**
     * @return SmsList 
     */
    public function sms() {
        return $this->account->sms;
    }

    /**
     * @return TokenList 
     */
    public function tokens() {
        return $this->account->tokens;
    }

    /**
     * @return TranscriptionList 
     */
    public function transcriptions() {
        return $this->account->transcriptions;
    }

    /**
     * @return UsageList 
     */
    public function usage() {
        return $this->account->usage;
    }

    /**
     * @return ValidationRequestList 
     */
    public function validationRequests() {
        return $this->account->validationRequests;
    }

    /**
     * Provide a friendly representation
     * 
     * @return string Machine friendly representation
     */
    public function __toString() {
        return '[Twilio.Api]';
    }
}
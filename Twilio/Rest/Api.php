<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest;

use Twilio\Domain;
use Twilio\Exceptions\TwilioException;
use Twilio\Rest\Api\V2010;

/**
 * @property V2010 v2010
 * @property AccountContext account
 * @property AddressList addresses
 * @property ApplicationList applications
 * @property AuthorizedConnectAppList authorizedConnectApps
 * @property AvailablePhoneNumberCountryList availablePhoneNumbers
 * @property CallList calls
 * @property ConferenceList conferences
 * @property ConnectAppList connectApps
 * @property IncomingPhoneNumberList incomingPhoneNumbers
 * @property MessageList messages
 * @property NotificationList notifications
 * @property OutgoingCallerIdList outgoingCallerIds
 * @property QueueList queues
 * @property RecordingList recordings
 * @property SandboxList sandbox
 * @property SipList sip
 * @property SmsList sms
 * @property TokenList tokens
 * @property TranscriptionList transcriptions
 * @property UsageList usage
 * @property ValidationRequestList validationRequests
 */
class Api extends Domain {
    protected $_v2010 = null;
    protected $_account = null;
    protected $_addresses = null;
    protected $_applications = null;
    protected $_authorizedConnectApps = null;
    protected $_availablePhoneNumbers = null;
    protected $_calls = null;
    protected $_conferences = null;
    protected $_connectApps = null;
    protected $_incomingPhoneNumbers = null;
    protected $_messages = null;
    protected $_notifications = null;
    protected $_outgoingCallerIds = null;
    protected $_queues = null;
    protected $_recordings = null;
    protected $_sandbox = null;
    protected $_sip = null;
    protected $_sms = null;
    protected $_tokens = null;
    protected $_transcriptions = null;
    protected $_usage = null;
    protected $_validationRequests = null;

    /**
     * Construct the Api Domain
     * 
     * @param Client $client Twilio\Rest\Client to communicate with Twilio
     * @return Api Domain for Api
     */
    public function __construct(Client $client) {
        parent::__construct($client);
        
        $this->baseUrl = 'https://api.twilio.com';
    }

    /**
     * @return V2010 Version v2010 of api
     */
    protected function getV2010() {
        if (!$this->_v2010) {
            $this->_v2010 = new V2010($this);
        }
        return $this->_v2010;
    }

    /**
     * Magic getter to lazy load version
     * 
     * @param string $name Version to return
     * @return \Twilio\Version The requested version
     * @throws TwilioException For unknown versions
     */
    public function __get($name) {
        if (property_exists($this, '_' . $name)) {
            $method = 'get' . ucfirst($name);
            return $this->$method();
        }
        
        throw new TwilioException('Unknown version ' . $name);
    }

    /**
     * Magic caller to get resource contexts
     * 
     * @param string $name Resource to return
     * @param array $arguments Context parameters
     * @return InstanceContext The requested resource context
     * @throws TwilioException For unknown resource
     */
    public function __call($name, $arguments) {
        $property = $this->$name;
        if (method_exists($property, 'getContext')) {
            return call_user_func_array(array($property, 'getContext'), $arguments);
        }
        
        throw new TwilioException('Resource does not have a context');
    }

    /**
     * @return Account Account provided as the authenticating account
     */
    public function account() {
        return $this->v2010->account;
    }

    /**
     * @return AccountList 
     */
    public function accounts() {
        return $this->v2010->accounts();
    }

    /**
     * @return AddressList 
     */
    public function getAddresses() {
        return $this->v2010->account->addresses;
    }

    /**
     * @return ApplicationList 
     */
    public function getApplications() {
        return $this->v2010->account->applications;
    }

    /**
     * @return AuthorizedConnectAppList 
     */
    public function getAuthorizedConnectApps() {
        return $this->v2010->account->authorizedConnectApps;
    }

    /**
     * @return AvailablePhoneNumberCountryList 
     */
    public function getAvailablePhoneNumbers() {
        return $this->v2010->account->availablePhoneNumbers;
    }

    /**
     * @return CallList 
     */
    public function getCalls() {
        return $this->v2010->account->calls;
    }

    /**
     * @return ConferenceList 
     */
    public function getConferences() {
        return $this->v2010->account->conferences;
    }

    /**
     * @return ConnectAppList 
     */
    public function getConnectApps() {
        return $this->v2010->account->connectApps;
    }

    /**
     * @return IncomingPhoneNumberList 
     */
    public function getIncomingPhoneNumbers() {
        return $this->v2010->account->incomingPhoneNumbers;
    }

    /**
     * @return MessageList 
     */
    public function getMessages() {
        return $this->v2010->account->messages;
    }

    /**
     * @return NotificationList 
     */
    public function getNotifications() {
        return $this->v2010->account->notifications;
    }

    /**
     * @return OutgoingCallerIdList 
     */
    public function getOutgoingCallerIds() {
        return $this->v2010->account->outgoingCallerIds;
    }

    /**
     * @return QueueList 
     */
    public function getQueues() {
        return $this->v2010->account->queues;
    }

    /**
     * @return RecordingList 
     */
    public function getRecordings() {
        return $this->v2010->account->recordings;
    }

    /**
     * @return SandboxList 
     */
    public function getSandbox() {
        return $this->v2010->account->sandbox;
    }

    /**
     * @return SipList 
     */
    public function getSip() {
        return $this->v2010->account->sip;
    }

    /**
     * @return SmsList 
     */
    public function getSms() {
        return $this->v2010->account->sms;
    }

    /**
     * @return TokenList 
     */
    public function getTokens() {
        return $this->v2010->account->tokens;
    }

    /**
     * @return TranscriptionList 
     */
    public function getTranscriptions() {
        return $this->v2010->account->transcriptions;
    }

    /**
     * @return UsageList 
     */
    public function getUsage() {
        return $this->v2010->account->usage;
    }

    /**
     * @return ValidationRequestList 
     */
    public function getValidationRequests() {
        return $this->v2010->account->validationRequests;
    }

    /**
     * Provide a friendly representation
     * 
     * @return string Machine friendly representation
     */
    public function __toString() {
        return '[Twilio.Api]';
    }
}
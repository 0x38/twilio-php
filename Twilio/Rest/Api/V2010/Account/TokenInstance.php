<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest\Api\V2010\Account;

use Twilio\Exceptions\TwilioException;
use Twilio\InstanceResource;
use Twilio\Version;

/**
 * @property string accountSid
 * @property string dateCreated
 * @property string dateUpdated
 * @property string iceServers
 * @property string password
 * @property string ttl
 * @property string username
 */
class TokenInstance extends InstanceResource {
    /**
     * Initialize the TokenInstance
     * 
     * @return TokenInstance 
     */
    public function __construct(Version $version, array $payload, $accountSid) {
        parent::__construct($version);
        
        // Marshaled Properties
        $this->properties = array(
            'accountSid' => $payload['account_sid'],
            'dateCreated' => $payload['date_created'],
            'dateUpdated' => $payload['date_updated'],
            'iceServers' => $payload['ice_servers'],
            'password' => $payload['password'],
            'ttl' => $payload['ttl'],
            'username' => $payload['username'],
        );
        
        $this->solution = array(
            'accountSid' => $accountSid,
        );
    }

    /**
     * @return string The unique sid that identifies this account
     */
    protected function getAccountSid() {
        return $this->properties['accountSid'];
    }

    /**
     * @return string The date this resource was created
     */
    protected function getDateCreated() {
        return $this->properties['dateCreated'];
    }

    /**
     * @return string The date this resource was last updated
     */
    protected function getDateUpdated() {
        return $this->properties['dateUpdated'];
    }

    /**
     * @return string An array representing the ephemeral credentials
     */
    protected function getIceServers() {
        return $this->properties['iceServers'];
    }

    /**
     * @return string The temporary password used for authenticating
     */
    protected function getPassword() {
        return $this->properties['password'];
    }

    /**
     * @return string The duration in seconds the credentials are valid
     */
    protected function getTtl() {
        return $this->properties['ttl'];
    }

    /**
     * @return string The temporary username that uniquely identifies a Token.
     */
    protected function getUsername() {
        return $this->properties['username'];
    }

    /**
     * Magic getter to access properties
     * 
     * @param string $name Property to access
     * @return mixed The requested property
     * @throws TwilioException For unknown properties
     */
    public function __get($name) {
        if (array_key_exists($name, $this->properties)) {
            $method = 'get' . ucfirst($name);
            return $this->$method();
        }
        
        throw new TwilioException('Unknown property: ' . $name);
    }

    /**
     * Provide a friendly representation
     * 
     * @return string Machine friendly representation
     */
    public function __toString() {
        return '[Twilio.Api.V2010.TokenInstance]';
    }
}
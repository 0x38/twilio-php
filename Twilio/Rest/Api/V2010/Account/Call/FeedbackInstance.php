<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest\Api\V2010\Account\Call;

use Twilio\Exceptions\TwilioException;
use Twilio\InstanceResource;
use Twilio\Values;
use Twilio\Version;

/**
 * @property string accountSid
 * @property string dateCreated
 * @property string dateUpdated
 * @property feedback.Issues issues
 * @property string qualityScore
 * @property string sid
 */
class FeedbackInstance extends InstanceResource {
    /**
     * Initialize the FeedbackInstance
     * 
     * @return FeedbackInstance 
     */
    public function __construct(Version $version, array $payload, $accountSid, $callSid) {
        parent::__construct($version);
        
        // Marshaled Properties
        $this->properties = array(
            'accountSid' => $payload['account_sid'],
            'dateCreated' => $payload['date_created'],
            'dateUpdated' => $payload['date_updated'],
            'issues' => $payload['issues'],
            'qualityScore' => $payload['quality_score'],
            'sid' => $payload['sid'],
        );
        
        $this->solution = array(
            'accountSid' => $accountSid,
            'callSid' => $callSid,
        );
    }

    /**
     * Generate an instance context for the instance, the context is capable of
     * performing various actions.  All instance actions are proxied to the context
     * 
     * @return FeedbackContext Context for this FeedbackInstance
     */
    protected function proxy() {
        if (!$this->context) {
            $this->context = new FeedbackContext(
                $this->version,
                $this->solution['accountSid'],
                $this->solution['callSid']
            );
        }
        
        return $this->context;
    }

    /**
     * @return string The account_sid
     */
    protected function getAccountSid() {
        return $this->properties['accountSid'];
    }

    /**
     * @return string The date_created
     */
    protected function getDateCreated() {
        return $this->properties['dateCreated'];
    }

    /**
     * @return string The date_updated
     */
    protected function getDateUpdated() {
        return $this->properties['dateUpdated'];
    }

    /**
     * @return feedback.Issues The issues
     */
    protected function getIssues() {
        return $this->properties['issues'];
    }

    /**
     * @return string 1 to 5 quality score
     */
    protected function getQualityScore() {
        return $this->properties['qualityScore'];
    }

    /**
     * @return string The sid
     */
    protected function getSid() {
        return $this->properties['sid'];
    }

    /**
     * Create a new FeedbackInstance
     * 
     * @param string $qualityScore The quality_score
     * @return FeedbackInstance Newly created FeedbackInstance
     */
    public function create($qualityScore, $options) {
        return $this->proxy()->create(
            $qualityScore,
            $options
        );
    }

    /**
     * Fetch a FeedbackInstance
     * 
     * @return FeedbackInstance Fetched FeedbackInstance
     */
    public function fetch() {
        return $this->proxy()->fetch();
    }

    /**
     * Update the FeedbackInstance
     * 
     * @param string $qualityScore An integer from 1 to 5
     * @return FeedbackInstance Updated FeedbackInstance
     */
    public function update($qualityScore, $options) {
        return $this->proxy()->update(
            $qualityScore,
            $options
        );
    }

    /**
     * Magic getter to access properties
     * 
     * @param string $name Property to access
     * @return mixed The requested property
     * @throws TwilioException For unknown properties
     */
    public function __get($name) {
        if (array_key_exists($name, $this->properties)) {
            $method = 'get' . ucfirst($name);
            return $this->$method();
        }
        
        throw new TwilioException('Unknown property: ' . $name);
    }

    /**
     * Provide a friendly representation
     * 
     * @return string Machine friendly representation
     */
    public function __toString() {
        $context = array();
        foreach ($this->solution as $key => $value) {
            $context[] = "$key=$value";
        }
        return '[Twilio.Api.V2010.FeedbackInstance ' . implode(' ', $context) . ']';
    }
}
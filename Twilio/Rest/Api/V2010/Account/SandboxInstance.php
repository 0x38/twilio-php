<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest\Api\V2010\Account;

use Twilio\Exceptions\TwilioException;
use Twilio\InstanceResource;
use Twilio\Values;
use Twilio\Version;

/**
 * @property string dateCreated
 * @property string dateUpdated
 * @property string pin
 * @property string accountSid
 * @property string phoneNumber
 * @property string applicationSid
 * @property string apiVersion
 * @property string voiceUrl
 * @property string voiceMethod
 * @property string smsUrl
 * @property string smsMethod
 * @property string statusCallback
 * @property string statusCallbackMethod
 * @property string uri
 */
class SandboxInstance extends InstanceResource {
    /**
     * Initialize the SandboxInstance
     * 
     * @return SandboxInstance 
     */
    public function __construct(Version $version, array $payload, $accountSid) {
        parent::__construct($version);
        
        // Marshaled Properties
        $this->properties = array(
            'dateCreated' => $payload['date_created'],
            'dateUpdated' => $payload['date_updated'],
            'pin' => $payload['pin'],
            'accountSid' => $payload['account_sid'],
            'phoneNumber' => $payload['phone_number'],
            'applicationSid' => $payload['application_sid'],
            'apiVersion' => $payload['api_version'],
            'voiceUrl' => $payload['voice_url'],
            'voiceMethod' => $payload['voice_method'],
            'smsUrl' => $payload['sms_url'],
            'smsMethod' => $payload['sms_method'],
            'statusCallback' => $payload['status_callback'],
            'statusCallbackMethod' => $payload['status_callback_method'],
            'uri' => $payload['uri'],
        );
        
        $this->solution = array(
            'accountSid' => $accountSid,
        );
    }

    /**
     * Generate an instance context for the instance, the context is capable of
     * performing various actions.  All instance actions are proxied to the context
     * 
     * @return SandboxContext Context for this SandboxInstance
     */
    protected function proxy() {
        if (!$this->context) {
            $this->context = new SandboxContext(
                $this->version,
                $this->solution['accountSid']
            );
        }
        
        return $this->context;
    }

    /**
     * @return string The date_created
     */
    protected function getDateCreated() {
        return $this->properties['dateCreated'];
    }

    /**
     * @return string The date_updated
     */
    protected function getDateUpdated() {
        return $this->properties['dateUpdated'];
    }

    /**
     * @return string The pin
     */
    protected function getPin() {
        return $this->properties['pin'];
    }

    /**
     * @return string The account_sid
     */
    protected function getAccountSid() {
        return $this->properties['accountSid'];
    }

    /**
     * @return string The phone_number
     */
    protected function getPhoneNumber() {
        return $this->properties['phoneNumber'];
    }

    /**
     * @return string The application_sid
     */
    protected function getApplicationSid() {
        return $this->properties['applicationSid'];
    }

    /**
     * @return string The api_version
     */
    protected function getApiVersion() {
        return $this->properties['apiVersion'];
    }

    /**
     * @return string The voice_url
     */
    protected function getVoiceUrl() {
        return $this->properties['voiceUrl'];
    }

    /**
     * @return string The voice_method
     */
    protected function getVoiceMethod() {
        return $this->properties['voiceMethod'];
    }

    /**
     * @return string The sms_url
     */
    protected function getSmsUrl() {
        return $this->properties['smsUrl'];
    }

    /**
     * @return string The sms_method
     */
    protected function getSmsMethod() {
        return $this->properties['smsMethod'];
    }

    /**
     * @return string The status_callback
     */
    protected function getStatusCallback() {
        return $this->properties['statusCallback'];
    }

    /**
     * @return string The status_callback_method
     */
    protected function getStatusCallbackMethod() {
        return $this->properties['statusCallbackMethod'];
    }

    /**
     * @return string The uri
     */
    protected function getUri() {
        return $this->properties['uri'];
    }

    /**
     * Fetch a SandboxInstance
     * 
     * @return SandboxInstance Fetched SandboxInstance
     */
    public function fetch() {
        return $this->proxy()->fetch();
    }

    /**
     * Update the SandboxInstance
     * 
     * @return SandboxInstance Updated SandboxInstance
     */
    public function update($options) {
        return $this->proxy()->update(
            $options
        );
    }

    /**
     * Magic getter to access properties
     * 
     * @param string $name Property to access
     * @return mixed The requested property
     * @throws TwilioException For unknown properties
     */
    public function __get($name) {
        if (array_key_exists($name, $this->properties)) {
            $method = 'get' . ucfirst($name);
            return $this->$method();
        }
        
        throw new TwilioException('Unknown property: ' . $name);
    }

    /**
     * Provide a friendly representation
     * 
     * @return string Machine friendly representation
     */
    public function __toString() {
        $context = array();
        foreach ($this->solution as $key => $value) {
            $context[] = "$key=$value";
        }
        return '[Twilio.Api.V2010.SandboxInstance ' . implode(' ', $context) . ']';
    }
}
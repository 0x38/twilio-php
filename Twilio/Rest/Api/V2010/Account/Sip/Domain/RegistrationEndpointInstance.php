<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest\Api\V2010\Account\Sip\Domain;

use Twilio\Deserialize;
use Twilio\Exceptions\TwilioException;
use Twilio\InstanceResource;
use Twilio\Version;

/**
 * @property string addressOfRecord
 * @property \DateTime dateCreated
 * @property \DateTime dateUpdated
 * @property \DateTime dateExpires
 * @property string sipCallId
 * @property string sipContact
 * @property integer sipCseq
 * @property string sipPath
 * @property string sipVia
 * @property string userAgent
 * @property string channelType
 * @property string displayName
 */
class RegistrationEndpointInstance extends InstanceResource {
    /**
     * Initialize the RegistrationEndpointInstance
     * 
     * @param \Twilio\Version $version Version that contains the resource
     * @param mixed[] $payload The response payload
     * @param string $accountSid The unique id of the account that sent the message
     * @param string $domainSid A string that uniquely identifies the SIP Domain
     * @return \Twilio\Rest\Api\V2010\Account\Sip\Domain\RegistrationEndpointInstance 
     */
    public function __construct(Version $version, array $payload, $accountSid, $domainSid) {
        parent::__construct($version);
        
        // Marshaled Properties
        $this->properties = array(
            'addressOfRecord' => $payload['address_of_record'],
            'dateCreated' => Deserialize::dateTime($payload['date_created']),
            'dateUpdated' => Deserialize::dateTime($payload['date_updated']),
            'dateExpires' => Deserialize::dateTime($payload['date_expires']),
            'sipCallId' => $payload['sip_call_id'],
            'sipContact' => $payload['sip_contact'],
            'sipCseq' => $payload['sip_cseq'],
            'sipPath' => $payload['sip_path'],
            'sipVia' => $payload['sip_via'],
            'userAgent' => $payload['user_agent'],
            'channelType' => $payload['channel_type'],
            'displayName' => $payload['display_name'],
        );
        
        $this->solution = array(
            'accountSid' => $accountSid,
            'domainSid' => $domainSid,
        );
    }

    /**
     * Magic getter to access properties
     * 
     * @param string $name Property to access
     * @return mixed The requested property
     * @throws TwilioException For unknown properties
     */
    public function __get($name) {
        if (array_key_exists($name, $this->properties)) {
            return $this->properties[$name];
        }
        
        if (property_exists($this, '_' . $name)) {
            $method = 'get' . ucfirst($name);
            return $this->$method();
        }
        
        throw new TwilioException('Unknown property: ' . $name);
    }

    /**
     * Provide a friendly representation
     * 
     * @return string Machine friendly representation
     */
    public function __toString() {
        return '[Twilio.Api.V2010.RegistrationEndpointInstance]';
    }
}
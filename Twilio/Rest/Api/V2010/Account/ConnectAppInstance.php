<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest\Api\V2010\Account;

use Twilio\Exceptions\TwilioException;
use Twilio\InstanceResource;
use Twilio\Values;
use Twilio\Version;

/**
 * @property string accountSid
 * @property string authorizeRedirectUrl
 * @property string companyName
 * @property string deauthorizeCallbackMethod
 * @property string deauthorizeCallbackUrl
 * @property string description
 * @property string friendlyName
 * @property string homepageUrl
 * @property connect_app.Permission permissions
 * @property string sid
 * @property string uri
 */
class ConnectAppInstance extends InstanceResource {
    /**
     * Initialize the ConnectAppInstance
     * 
     * @return ConnectAppInstance 
     */
    public function __construct(Version $version, array $payload, $accountSid, $sid = null) {
        parent::__construct($version);
        
        // Marshaled Properties
        $this->properties = array(
            'accountSid' => $payload['account_sid'],
            'authorizeRedirectUrl' => $payload['authorize_redirect_url'],
            'companyName' => $payload['company_name'],
            'deauthorizeCallbackMethod' => $payload['deauthorize_callback_method'],
            'deauthorizeCallbackUrl' => $payload['deauthorize_callback_url'],
            'description' => $payload['description'],
            'friendlyName' => $payload['friendly_name'],
            'homepageUrl' => $payload['homepage_url'],
            'permissions' => $payload['permissions'],
            'sid' => $payload['sid'],
            'uri' => $payload['uri'],
        );
        
        $this->solution = array(
            'accountSid' => $accountSid,
            'sid' => $sid ?: $this->properties['sid'],
        );
    }

    /**
     * Generate an instance context for the instance, the context is capable of
     * performing various actions.  All instance actions are proxied to the context
     * 
     * @return ConnectAppContext Context for this ConnectAppInstance
     */
    protected function proxy() {
        if (!$this->context) {
            $this->context = new ConnectAppContext(
                $this->version,
                $this->solution['accountSid'],
                $this->solution['sid']
            );
        }
        
        return $this->context;
    }

    /**
     * @return string The unique sid that identifies this account
     */
    protected function getAccountSid() {
        return $this->properties['accountSid'];
    }

    /**
     * @return string URIL Twilio sends requests when users authorize
     */
    protected function getAuthorizeRedirectUrl() {
        return $this->properties['authorizeRedirectUrl'];
    }

    /**
     * @return string The company name set for this Connect App.
     */
    protected function getCompanyName() {
        return $this->properties['companyName'];
    }

    /**
     * @return string HTTP method Twilio WIll use making requests to the url
     */
    protected function getDeauthorizeCallbackMethod() {
        return $this->properties['deauthorizeCallbackMethod'];
    }

    /**
     * @return string URL Twilio will send a request when a user de-authorizes this
     *                app
     */
    protected function getDeauthorizeCallbackUrl() {
        return $this->properties['deauthorizeCallbackUrl'];
    }

    /**
     * @return string A more detailed human readable description
     */
    protected function getDescription() {
        return $this->properties['description'];
    }

    /**
     * @return string A human readable name for the Connect App.
     */
    protected function getFriendlyName() {
        return $this->properties['friendlyName'];
    }

    /**
     * @return string The URL users can obtain more information
     */
    protected function getHomepageUrl() {
        return $this->properties['homepageUrl'];
    }

    /**
     * @return connect_app.Permission The set of permissions that your ConnectApp
     *                                requests.
     */
    protected function getPermissions() {
        return $this->properties['permissions'];
    }

    /**
     * @return string A string that uniquely identifies this connect-apps
     */
    protected function getSid() {
        return $this->properties['sid'];
    }

    /**
     * @return string The URI for this resource
     */
    protected function getUri() {
        return $this->properties['uri'];
    }

    /**
     * Fetch a ConnectAppInstance
     * 
     * @return ConnectAppInstance Fetched ConnectAppInstance
     */
    public function fetch() {
        return $this->proxy()->fetch();
    }

    /**
     * Update the ConnectAppInstance
     * 
     * @return ConnectAppInstance Updated ConnectAppInstance
     */
    public function update($options) {
        return $this->proxy()->update(
            $options
        );
    }

    /**
     * Magic getter to access properties
     * 
     * @param string $name Property to access
     * @return mixed The requested property
     * @throws TwilioException For unknown properties
     */
    public function __get($name) {
        if (array_key_exists($name, $this->properties)) {
            $method = 'get' . ucfirst($name);
            return $this->$method();
        }
        
        throw new TwilioException('Unknown property: ' . $name);
    }

    /**
     * Provide a friendly representation
     * 
     * @return string Machine friendly representation
     */
    public function __toString() {
        $context = array();
        foreach ($this->solution as $key => $value) {
            $context[] = "$key=$value";
        }
        return '[Twilio.Api.V2010.ConnectAppInstance ' . implode(' ', $context) . ']';
    }
}
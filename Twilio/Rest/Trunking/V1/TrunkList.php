<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest\Trunking\V1;

use Twilio\ListResource;
use Twilio\Values;
use Twilio\Version;

class TrunkList extends ListResource {
    /**
     * Construct the TrunkList
     * 
     * @param Version $version Version that contains the resource
     * @return TrunkList 
     */
    public function __construct(Version $version) {
        parent::__construct($version);
        
        // Path Solution
        $this->solution = array();
        
        $this->uri = '/Trunks';
    }

    /**
     * Create a new TrunkInstance
     * 
     * @param array $options Optional Arguments
     * @return TrunkInstance Newly created TrunkInstance
     */
    public function create(array $options = array()) {
        $options = new Values($options);
        
        $data = Values::of(array(
            'FriendlyName' => $options['friendlyName'],
            'DomainName' => $options['domainName'],
            'DisasterRecoveryUrl' => $options['disasterRecoveryUrl'],
            'DisasterRecoveryMethod' => $options['disasterRecoveryMethod'],
            'Recording' => $options['recording'],
            'Secure' => $options['secure'],
        ));
        
        $payload = $this->version->create(
            'POST',
            $this->uri,
            array(),
            $data
        );
        
        return new TrunkInstance(
            $this->version,
            $payload
        );
    }

    /**
     * Constructs a TrunkContext
     * 
     * @param string $sid The sid
     * @return TrunkContext 
     */
    public function getContext($sid) {
        return new TrunkContext(
            $this->version,
            $sid
        );
    }

    /**
     * Provide a friendly representation
     * 
     * @return string Machine friendly representation
     */
    public function __toString() {
        return '[Twilio.Trunking.V1.TrunkList]';
    }
}